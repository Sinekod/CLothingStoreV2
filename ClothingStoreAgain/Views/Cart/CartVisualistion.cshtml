@model List<CartProductViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .cart-container {
            margin-top: 50px;
        }

        .cart-item {
            padding: 15px;
            border-bottom: 1px solid #ccc;
        }

            .cart-item img {
                max-width: 100px;
                border-radius: 10px;
            }

        .item-quantity {
            display: flex;
            align-items: center;
        }

            .item-quantity input {
                width: 60px;
                text-align: center;
            }
    </style>
</head>
<body>
    <div class="container cart-container">
        <h1>Your Cart</h1>
        @if (Model.Any())
        {
            foreach (var item in Model)
            {
                <div class="row cart-item">
                    <div class="col-md-2">
                        <img src="@item.ImgUrl" alt="@item.Name" />
                    </div>
                    <div class="col-md-4">
                        <h5>@item.Name</h5>
                        <p>
                            Price: $<span id="price-@item.Id" data-price="@item.Price">@item.Price</span>
                        </p>
                    </div>
                    <div class="col-md-3 item-quantity">
                        <input type="number" value="@item.Quantity" min="1" class="form-control quantity" id="quantity-@item.Id" data-id="@item.Id" />
                    </div>
                    <div class="col-md-3 text-end">
                        <form asp-action="RemoveFromCart" asp-controller="Cart" method="post">
                            <input type="hidden" name="productId" value="@item.Id" />
                            <button type="submit" class="btn btn-danger">Remove</button>
                        </form>
                    </div>
                </div>
            }
            <div class="mt-3">
                <h4>Total Price: $<span id="total-price">0.00</span></h4>
            </div>
        }
        else
        {
            <p>Your cart is empty.</p>
        }
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to calculate the total price
            function calculateTotalPrice() {
                let totalPrice = 0;

                // Loop through each cart item
                $('.quantity').each(function () {
                    let id = $(this).data('id'); // Product ID
                    let quantity = parseInt($(this).val()); // Quantity
                    let unitPrice = parseFloat($('#price-' + id).data('price')); // Unit price

                    // Add to total price
                    totalPrice += quantity * unitPrice;

                    // Save the quantity to localStorage
                    localStorage.setItem('quantity-' + id, quantity);
                });

                // Update the total price display
                $('#total-price').text(totalPrice.toFixed(2));
            }

            // Load saved quantities from localStorage
            $('.quantity').each(function () {
                let id = $(this).data('id');
                let savedQuantity = localStorage.getItem('quantity-' + id);

                if (savedQuantity) {
                    $(this).val(savedQuantity); // Update quantity input
                    let unitPrice = parseFloat($('#price-' + id).data('price'));
                    let newPrice = unitPrice * savedQuantity;
                    $('#price-' + id).text(newPrice.toFixed(2)); // Update item price display
                }
            });

            // Attach event listener to quantity inputs
            $('.quantity').change(function () {
                let id = $(this).data('id');
                let newQuantity = $(this).val();
                let priceElement = $('#price-' + id);
                let unitPrice = parseFloat(priceElement.data('price'));

                // Calculate new price for this item
                let newPrice = unitPrice * newQuantity;
                priceElement.text(newPrice.toFixed(2)); // Update item price display

                // Recalculate total price
                calculateTotalPrice();
            });

            // Initial total price calculation
            calculateTotalPrice();
        });
    </script>
</body>
</html>
